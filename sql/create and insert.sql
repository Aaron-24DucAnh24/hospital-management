
-- CREATE NEW USER
CREATE USER 'Manager'@'localhost' IDENTIFIED BY '22122001';

-- MAKE USER CAN BE IDENTIFIED FROM APP SERVER
ALTER USER 'Manager'@'localhost' IDENTIFIED WITH mysql_native_password BY '22122001';

-- GRANT ALL ACCESS TO USER
GRANT ALL ON Hospital.* TO 'Manager'@'localhost';

-- CREATE SCHEMA AND CHOOSE SCHEMA TO USE
CREATE SCHEMA HOSPITAL;
USE HOSPITAL;

CREATE TABLE DOCTOR
(   
    DOCCODE 	CHAR(6) 		PRIMARY KEY,
    FNAME 		VARCHAR(15) 	NOT NULL,
    LNAME 		VARCHAR(15) 	NOT NULL,
    SPECNAME 	VARCHAR (15) 	,
    SPECYEAR 	YEAR 			,
    START_DATE 	DATE 			,
    GENDER 		CHAR(1) 		,
    DOB 		DATE 			,
    ADDRESS 	VARCHAR(30) 	,
    DECODE 		CHAR(2) 		NOT NULL
);

CREATE TABLE NURSE
(
    NCODE 		CHAR(6) 		PRIMARY KEY,
    FNAME 		VARCHAR(15) 	NOT NULL,
    LNAME 		VARCHAR(15) 	NOT NULL,
    SPECNAME 	VARCHAR (15) 	,
    SPECYEAR 	YEAR 			,
    START_DATE 	DATE 			,
    GENDER 		CHAR(1) 		,
    DOB 		DATE 			,
    ADDRESS 	VARCHAR(30) 	,
    DECODE 		CHAR(2) 		NOT NULL
);

-- INSERT DOCTOR
INSERT INTO DOCTOR(DOCCODE, FNAME, LNAME, SPECNAME, SPECYEAR, START_DATE, GENDER, DOB, ADDRESS, DECODE) 
	VALUES 
    ('000001', 'Nguyen', 'Van A', 'Emergency', '2016', '2017-05-05', 'M', '1988-06-06', 'Ho Chi Minh city', 'A1'),
	('000002', 'John', 'Wick', 'Emergency', '2015', '2018-07-05', 'M', '1990-11-06', 'Binh Phuoc', 'A1'),
	('000003', 'Leo', 'Messi', 'Anesthesiology', '2016', '2011-08-05', 'M', '1986-06-08', 'Ho Chi Minh city', 'A2'),
	('000004', 'Zlatan', 'Ibrahimovic', 'Anesthesiology', '2019', '2015-12-22', 'M', '1988-06-06', 'Binh Duong', 'A2'),
	('000005', 'Angelina', 'Jolie', 'Allergy', '2015', '2021-05-05', 'F', '1977-06-06', 'Ho Chi Minh city', 'A3'),
	('000006', 'Tran', 'Van B', 'Allergy', '2020', '2019-08-05', 'M', '1979-09-06', 'Ho Chi Minh city', 'A3'),
	('000007', 'Bille', 'John', 'Recovery', '2009', '2009-12-05', 'M', '1988-10-10', 'Ho Chi Minh city', 'A4'),
	('000008', 'Ashley', 'Young', 'Recovery', '2021', '2017-08-21', 'M', '1975-01-01', 'Ho Chi Minh city', 'A4');
    
-- INSERT NURSE
INSERT INTO NURSE(NCODE, FNAME, LNAME, SPECNAME, SPECYEAR, START_DATE, GENDER, DOB, ADDRESS, DECODE) 
	VALUES
    ('000009', 'Le', 'Thi Hong Hanh', 'Emergency', '2016', '2017-05-05', 'F', '1988-06-06', 'Ho Chi Minh city', 'A1'),
	('000010', 'Nguyen', 'Thi Que Anh', 'Emergency', '2020', '2018-07-05', 'F', '1990-11-06', 'Hoi An city', 'A1'),
	('000011', 'Tran', 'My Duyen', 'Anesthesiology', '2021', '2011-08-05', 'F', '1986-06-08', 'Ho Chi Minh city', 'A2'),
	('000012', 'Donnie', 'Van De Beck', 'Anesthesiology', '2019', '2015-12-22', 'F', '1988-06-06', 'Binh Duong', 'A2'),
	('000013', 'Marcus', 'Rashford', 'Recovery', '2017', '2021-05-05', 'F', '1977-06-06', 'Ho Chi Minh city', 'A3'),
	('000014', 'Bennie', 'Any', 'Recovery', '2012', '2019-12-12', 'F', '1990-10-28', 'Ho Chi Minh city', 'A3'),
	('000015', 'Bernaldo', 'Selena', 'Allergy', '2016', '2016-02-21', 'F', '1991-05-07', 'Ho Chi Minh city', 'A4'),
	('000016', 'Didier', 'Bwin', 'Allergy', '2021', '2021-12-22', 'F', '1988-12-12', 'Ho Chi Minh city', 'A4');

CREATE TABLE DEPARTMENT
(
    DCODE 		CHAR(2) 	PRIMARY KEY,
    TITLE 		VARCHAR(30) UNIQUE,
    DEAN_CODE 	CHAR(6) 	NOT NULL,
    CONSTRAINT  FK_DEP_DEAN_CODE FOREIGN KEY (DEAN_CODE) REFERENCES  DOCTOR(DOCCODE)
);

-- TRIGGER FOR CHECKING DEAN DOCTOR ON INSERTING
DELIMITER //
CREATE TRIGGER CHECK_DEAN_DOCTOR_1 BEFORE INSERT ON DEPARTMENT
FOR EACH ROW
BEGIN
	DECLARE V_YEAR YEAR;
	SELECT SPECYEAR INTO V_YEAR FROM DOCTOR WHERE DOCCODE = NEW.DEAN_CODE;
    IF (YEAR(CURDATE())) - 5 < V_YEAR
    THEN 
		SIGNAL SQLSTATE '45000';
	END IF;
END //

-- TRIGGER FOR CHECKING DEAN DOCTOR ON UPDATING
DELIMITER //
CREATE TRIGGER CHECK_DEAN_DOCTOR_2 BEFORE UPDATE ON DEPARTMENT
FOR EACH ROW
BEGIN
	DECLARE V_YEAR YEAR;
	SELECT SPECYEAR INTO V_YEAR FROM DOCTOR WHERE DOCCODE = NEW.DEAN_CODE;
    IF (YEAR(CURDATE())) - 5 < V_YEAR
    THEN 
		SIGNAL SQLSTATE '45000';
	END IF;
END //

-- INSERT DEPARTMENT
INSERT INTO DEPARTMENT(DCODE, TITLE, DEAN_CODE)
	VALUE
    ('A1', 'Accident and emergency', '000001'),
	('A2', 'Anesthetics', '000003'),
	('A3', 'Burn center', '000005'),
	('A4', 'Coronary care unit', '000007');

ALTER TABLE DOCTOR 
	ADD CONSTRAINT FK_DOCTOR_DECODE 
    FOREIGN KEY (DECODE) 
    REFERENCES DEPARTMENT(DCODE) 
    ON DELETE CASCADE;

ALTER TABLE NURSE 
	ADD CONSTRAINT FK_NURSE_DECODE 
    FOREIGN KEY (DECODE) 
    REFERENCES DEPARTMENT(DCODE) 
    ON DELETE CASCADE;
    
CREATE TABLE PROVIDER
(
    PNUMBER CHAR(3) 	PRIMARY KEY,
    PHONE   VARCHAR(11) NOT NULL UNIQUE,
    ADDRESS VARCHAR(30) NOT NULL
);

CREATE TABLE MEDICATION
(
    MCODE 		CHAR(4)     	PRIMARY KEY,
    NAME    	VARCHAR(30) 	NOT NULL,
    PRICE   	DECIMAL(7, 0)   NOT NULL,
    IMP_DATE    DATE    		NOT NULL,
    EXP_DATE    DATE    		NOT NULL,
    QUANTITY 	INT 			NOT NULL,
    IS_EXPIRED  CHAR(1)			DEFAULT '0'			
);

-- TRIGGER FOR HANDLING EXPIRED MEDICATION
DELIMITER //
CREATE EVENT CHECK_MEDICATION ON SCHEDULE EVERY 1 DAY
DO BEGIN
	UPDATE MEDICATION
    SET IS_EXPIRED = '1'
    WHERE EXP_DATE < CURDATE() OR EXP_DATE = CURDATE();
END //

CREATE TABLE INPATIENT
(
    PREFIX  CHAR(2) 		DEFAULT 'IP',
    POSTFIX CHAR(7) 		NOT NULL,
    FNAME   VARCHAR(15) 	NOT NULL,
    LNAME   VARCHAR(15) 	NOT NULL,
    GENDER  CHAR(1) 		NOT NULL,
    ADDRESS VARCHAR(30),
    PHONE   VARCHAR(11),
    CONSTRAINT PK_IPATIENT PRIMARY KEY (PREFIX, POSTFIX)
);

CREATE TABLE OUTPATIENT
(
    PREFIX  CHAR(2) 		DEFAULT 'OP',
    POSTFIX CHAR(7) 		NOT NULL,
    FNAME   VARCHAR(15) 	NOT NULL,
    LNAME   VARCHAR(15) 	NOT NULL,
    GENDER  CHAR(1) 		NOT NULL,
    ADDRESS VARCHAR(30),
    PHONE   VARCHAR(11),
    CONSTRAINT PK_OPATIENT PRIMARY KEY (PREFIX, POSTFIX)
);

CREATE TABLE ADMISSION
(
    ADMISSION_DATE  DATE    		NOT NULL,
    ROOM    		CHAR(4) 		,
    FEE 			DECIMAL(15,0) 	DEFAULT 0,
	IPREFIX 		CHAR(2) 		DEFAULT 'IP',
    IPOSTFIX 		CHAR(9) 		NOT NULL, 
    NCODE			CHAR(6),
	CONSTRAINT PK_ADMISSION PRIMARY KEY (ADMISSION_DATE, IPREFIX, IPOSTFIX),
    CONSTRAINT FK_ADM_INP_ID FOREIGN KEY (IPREFIX, IPOSTFIX) 
							 REFERENCES INPATIENT(PREFIX, POSTFIX) 
							 ON DELETE CASCADE 
							 ON UPDATE CASCADE,
    CONSTRAINT FK_ADM_NUR_NCODE FOREIGN KEY (NCODE)
                                REFERENCES NURSE(NCODE)
                                ON DELETE SET NULL  
                                ON UPDATE CASCADE
);

CREATE TABLE TREATMENT
(
    START_TIME  	DATETIME   		NOT NULL,
    END_TIME    	DATETIME    	NOT NULL,
    ADMISSION_DATE	DATE			NOT NULL,
	IPREFIX 		CHAR(2) 		DEFAULT 'IP',
    IPOSTFIX 		CHAR(9) 		NOT NULL,
    RESULT  		VARCHAR(15) 	NOT NULL,
    FEE				DECIMAL(15,0)	NOT NULL,
    DIAGNOSIS   	VARCHAR(20) 	NOT NULL,
    DCODE			CHAR(6)			,
	CONSTRAINT PK_TREATMENT PRIMARY KEY (START_TIME, END_TIME, ADMISSION_DATE, IPREFIX, IPOSTFIX),
    CONSTRAINT FK_TRE_ADM_INP_ID FOREIGN KEY (ADMISSION_DATE, IPREFIX, IPOSTFIX)
								 REFERENCES ADMISSION(ADMISSION_DATE, IPREFIX, IPOSTFIX) 
								 ON DELETE CASCADE
								 ON UPDATE CASCADE,
	CONSTRAINT FK_TRE_DCODE FOREIGN KEY (DCODE) 
								 REFERENCES DOCTOR(DOCCODE)
                                 ON DELETE SET NULL
                                 ON UPDATE CASCADE
);

-- TRIGGER HANDLING ADMISSION FEE WITH ACTION ON TREATMENT
DELIMITER //
CREATE TRIGGER ADMISSION_FEE_1 
AFTER INSERT ON TREATMENT
FOR EACH ROW
BEGIN
	UPDATE ADMISSION
    SET FEE = FEE + NEW.FEE
    WHERE  ADMISSION_DATE = NEW.ADMISSION_DATE AND IPREFIX = NEW.IPREFIX AND IPOSTFIX = NEW.IPOSTFIX;
END //

DELIMITER //
CREATE TRIGGER ADMISSION_FEE_2 
AFTER UPDATE ON TREATMENT
FOR EACH ROW
BEGIN
	UPDATE ADMISSION
    SET FEE = FEE + NEW.FEE - OLD.FEE
    WHERE  ADMISSION_DATE = NEW.ADMISSION_DATE AND IPREFIX = NEW.IPREFIX AND IPOSTFIX = NEW.IPOSTFIX;
END //

DELIMITER //
CREATE TRIGGER ADMISSION_FEE_3
AFTER DELETE ON TREATMENT
FOR EACH ROW
BEGIN
	UPDATE ADMISSION
    SET FEE = FEE - OLD.FEE
    WHERE  ADMISSION_DATE = OLD.ADMISSION_DATE AND IPREFIX = OLD.IPREFIX AND IPOSTFIX = OLD.IPOSTFIX;
END //

CREATE TABLE EXAMINATION
(
    TIME    	DATETIME    	NOT NULL,
    OPREFIX		CHAR(2)			DEFAULT 'OP',
    OPOSTFIX 	CHAR(9)			NOT NULL,
    FEE 		DECIMAL(15,0)   NOT NULL,
    NEXT_DATE   DATE,
    DIAGNOSIS   VARCHAR(20) 	NOT NULL,
    DCODE		CHAR(6),
    CONSTRAINT PK_EXAMINATION PRIMARY KEY (TIME, OPREFIX, OPOSTFIX),
    CONSTRAINT FK_EXA_OUTP_ID FOREIGN KEY (OPREFIX, OPOSTFIX)
							  REFERENCES OUTPATIENT(PREFIX, POSTFIX)
							  ON DELETE CASCADE 
                              ON UPDATE CASCADE,
    CONSTRAINT FK_EXA_DOC_DCODE FOREIGN KEY (DCODE)
								REFERENCES DOCTOR(DOCCODE)
                                ON DELETE SET NULL
                                ON UPDATE CASCADE
);

CREATE TABLE DOCTOR_PHONE
(
    PHONE_NO    VARCHAR(11)		NOT NULL,
    DOCCODE		CHAR(6)			NOT NULL,
    CONSTRAINT PK_DOCTOR_PHONE PRIMARY KEY (DOCCODE, PHONE_NO),
    CONSTRAINT FK_PNO_DOC_DOCCODE   FOREIGN KEY(DOCCODE)
                                    REFERENCES DOCTOR(DOCCODE)
                                    ON DELETE CASCADE 
                                    ON UPDATE CASCADE
);

CREATE TABLE NURSE_PHONE
(
    PHONE_NO    VARCHAR(11)		NOT NULL,
    NCODE		CHAR(6)			NOT NULL,
    CONSTRAINT PK_NURSE_PHONE 	PRIMARY KEY (NCODE, PHONE_NO),
    CONSTRAINT FK_PNO_NUR_NCODE FOREIGN KEY(NCODE)
								REFERENCES NURSE(NCODE)
								ON DELETE CASCADE 
                                ON UPDATE CASCADE
);

CREATE TABLE MEDICATION_EFFECT
(
    EFFECT  VARCHAR(15) NOT NULL,
    MCODE 	CHAR(4) 	NOT NULL,
	CONSTRAINT PK_MED_EFFECT PRIMARY KEY (MCODE, EFFECT),
    CONSTRAINT FK_EFF_MED_MCODE FOREIGN KEY (MCODE)
                                REFERENCES MEDICATION(MCODE)
                                ON DELETE CASCADE 
                                ON UPDATE CASCADE
);

CREATE TABLE USES
(
    USE_QUANTITY    DECIMAL(10,0)   NOT NULL    DEFAULT 0,
	START_TIME  	DATETIME   		NOT NULL,
    END_TIME    	DATETIME    	NOT NULL,
    ADMISSION_DATE	DATE			NOT NULL,
	IPREFIX 		CHAR(2) 		DEFAULT 'IP',
    IPOSTFIX 		CHAR(9) 		NOT NULL,
    MCODE			CHAR(4)			NOT NULL,
    CONSTRAINT PK_USES PRIMARY KEY (START_TIME, END_TIME, ADMISSION_DATE, IPREFIX, IPOSTFIX, MCODE),
    CONSTRAINT FK_USE_TRE_ID FOREIGN KEY (START_TIME, END_TIME, ADMISSION_DATE, IPREFIX, IPOSTFIX)
							REFERENCES TREATMENT(START_TIME, END_TIME, ADMISSION_DATE, IPREFIX, IPOSTFIX)
							ON DELETE CASCADE 
                            ON UPDATE CASCADE,
    CONSTRAINT FK_USE_MED_MCODE FOREIGN KEY (MCODE)
								REFERENCES MEDICATION (MCODE)
								ON DELETE CASCADE   
                                ON UPDATE CASCADE
);

-- TRIGGER HANDLING ADMISSION FEE WITH ACTION ON USES
DELIMITER //
CREATE TRIGGER ADMISSION_FEE_4
AFTER INSERT ON USES
FOR EACH ROW
BEGIN
	DECLARE V_MED_FEE DECIMAL(15,0);
    
    SELECT (MEDICATION.PRICE*USES.USE_QUANTITY) AS MED_FEE INTO V_MED_FEE
    FROM MEDICATION JOIN USES ON MEDICATION.MCODE = USES.MCODE
    WHERE USES.START_TIME = NEW.START_TIME 
		AND USES.END_TIME = NEW.END_TIME
        AND USES.ADMISSION_DATE = NEW.ADMISSION_DATE
        AND USES.IPREFIX = NEW.IPREFIX
        AND USES.IPOSTFIX = NEW.IPOSTFIX
        AND USES.MCODE = NEW.MCODE;
    
	UPDATE ADMISSION
    SET FEE = FEE + V_MED_FEE
    WHERE  ADMISSION_DATE = NEW.ADMISSION_DATE AND IPREFIX = NEW.IPREFIX AND IPOSTFIX = NEW.IPOSTFIX;
END //

DELIMITER //
CREATE TRIGGER ADMISSION_FEE_5
AFTER UPDATE ON USES
FOR EACH ROW
BEGIN
	DECLARE V_MED_FEE DECIMAL(15,0);
    
    SELECT (MEDICATION.PRICE*USES.USE_QUANTITY) AS MED_FEE INTO V_MED_FEE
    FROM MEDICATION JOIN USES ON MEDICATION.MCODE = USES.MCODE
    WHERE USES.START_TIME = NEW.START_TIME 
		AND USES.END_TIME = NEW.END_TIME
        AND USES.ADMISSION_DATE = NEW.ADMISSION_DATE
        AND USES.IPREFIX = NEW.IPREFIX
        AND USES.IPOSTFIX = NEW.IPOSTFIX
        AND USES.MCODE = NEW.MCODE;
    
	UPDATE ADMISSION
    SET FEE = FEE + V_MED_FEE
    WHERE  ADMISSION_DATE = NEW.ADMISSION_DATE AND IPREFIX = NEW.IPREFIX AND IPOSTFIX = NEW.IPOSTFIX;
END //

DELIMITER //
CREATE TRIGGER ADMISSION_FEE_6
BEFORE UPDATE ON USES
FOR EACH ROW
BEGIN
	DECLARE V_MED_FEE DECIMAL(15,0);
    
    SELECT (MEDICATION.PRICE*USES.USE_QUANTITY) AS MED_FEE INTO V_MED_FEE
    FROM MEDICATION JOIN USES ON MEDICATION.MCODE = USES.MCODE
    WHERE USES.START_TIME = OLD.START_TIME 
		AND USES.END_TIME = OLD.END_TIME
        AND USES.ADMISSION_DATE = OLD.ADMISSION_DATE
        AND USES.IPREFIX = OLD.IPREFIX
        AND USES.IPOSTFIX = OLD.IPOSTFIX
        AND USES.MCODE = OLD.MCODE;
    
	UPDATE ADMISSION
    SET FEE = FEE - V_MED_FEE
    WHERE  ADMISSION_DATE = OLD.ADMISSION_DATE AND IPREFIX = OLD.IPREFIX AND IPOSTFIX = OLD.IPOSTFIX;
END //

DELIMITER //
CREATE TRIGGER ADMISSION_FEE_7
BEFORE DELETE ON USES
FOR EACH ROW
BEGIN
	DECLARE V_MED_FEE DECIMAL(15,0);
    
    SELECT (MEDICATION.PRICE*USES.USE_QUANTITY) AS MED_FEE INTO V_MED_FEE
    FROM MEDICATION JOIN USES ON MEDICATION.MCODE = USES.MCODE
    WHERE USES.START_TIME = OLD.START_TIME 
		AND USES.END_TIME = OLD.END_TIME
        AND USES.ADMISSION_DATE = OLD.ADMISSION_DATE
        AND USES.IPREFIX = OLD.IPREFIX
        AND USES.IPOSTFIX = OLD.IPOSTFIX
        AND USES.MCODE = OLD.MCODE;
    
	UPDATE ADMISSION
    SET FEE = FEE - V_MED_FEE
    WHERE  ADMISSION_DATE = OLD.ADMISSION_DATE AND IPREFIX = OLD.IPREFIX AND IPOSTFIX = OLD.IPOSTFIX;
END //


CREATE TABLE CONSUMES
(
    TIME    	DATETIME    	NOT NULL,
    OPREFIX		CHAR(2)			DEFAULT 'OP',
    OPOSTFIX 	CHAR(9)			NOT NULL,
    MCODE 		CHAR(4)			NOT NULL,
    CONSUME_QUANTITY    DECIMAL(10,0)   NOT NULL,
    CONSTRAINT PK_CONSUMES PRIMARY KEY (TIME, OPREFIX, OPOSTFIX, MCODE),
    CONSTRAINT FK_CONS_EXAM FOREIGN KEY (TIME, OPREFIX, OPOSTFIX)
							REFERENCES EXAMINATION(TIME, OPREFIX, OPOSTFIX)
                            ON DELETE CASCADE 
                            ON UPDATE CASCADE,
	CONSTRAINT FK_CONS_MED FOREIGN KEY (MCODE) 
							REFERENCES MEDICATION(MCODE)
                            ON DELETE CASCADE 
                            ON UPDATE CASCADE
);

CREATE TABLE PROVIDES
(
	PNUMBER CHAR(3) NOT NULL,
    MCODE   CHAR(4) NOT NULL,
    CONSTRAINT PK_PROVIDES PRIMARY KEY(PNUMBER, MCODE),
    CONSTRAINT FK_PRO_PNUM FOREIGN KEY(PNUMBER)
						   REFERENCES PROVIDER(PNUMBER)
                           ON DELETE CASCADE 
                           ON UPDATE CASCADE
);

CREATE TABLE CONFIRMS_RECOVERY
(
    DATE_OF_DISCHARGE   DATE    NOT NULL,
	ADMISSION_DATE 		DATE 	NOT NULL,
    IPREFIX	CHAR(2) 	DEFAULT 'IP',
    IPOSTFIX CHAR(9) 	NOT NULL,
    DOCCODE CHAR(6) 	NOT NULL,
    CONSTRAINT PK_CON_REC PRIMARY KEY(ADMISSION_DATE, IPREFIX, IPOSTFIX, DOCCODE),
    CONSTRAINT FK_CON_REC_AD FOREIGN KEY(ADMISSION_DATE, IPREFIX, IPOSTFIX)
							 REFERENCES ADMISSION(ADMISSION_DATE, IPREFIX, IPOSTFIX)
                             ON DELETE CASCADE 
                             ON UPDATE CASCADE,
	CONSTRAINT FK_CON_DOC 	FOREIGN KEY(DOCCODE)
							REFERENCES DOCTOR(DOCCODE)
							ON DELETE CASCADE 
                            ON UPDATE CASCADE
);
    
-- INSERT PROVIDER
INSERT INTO PROVIDER(PNUMBER, PHONE, ADDRESS)
	VALUE
    ('001', '0235262452', 'Ho Chi Minh city'),
	('002', '0655245252', 'Ha Noi city'),
	('003', '0645219876', 'Lam Dong'),
	('004', '0794264821', 'Da Nang city');
    
-- INSERT MEDICATION
INSERT INTO MEDICATION(MCODE, NAME, PRICE, IMP_DATE, EXP_DATE, QUANTITY)
	VALUE
    ('A001', 'Paracetamol', 600000, '2015-08-10', '2020-08-10', 1000),
	('B002', 'Rocket 1 hour', 1500000, '2018-12-12', '2023-12-12', 500),
	('B003', 'Hoat huyet nhat nhat', 950000, '2022-01-01', '2024-01-01', 1500),
	('C003', 'Glutamine', 2300000, '2017-08-30', '2024-08-30', 2000);
    
-- INSERT MEDICATION_EFFECT
INSERT INTO MEDICATION_EFFECT(EFFECT, MCODE)
    VALUE
         ('EFFECT 01', 'A001'),
         ('EFFECT 02', 'A001'),
         ('EFFECT 03', 'B002'),
         ('EFFECT 04', 'B003'),
         ('EFFECT 05', 'C003'),
         ('EFFECT 06', 'C003'),
         ('EFFECT 07', 'C003');

-- INSERT INPATIENT
INSERT INTO INPATIENT(POSTFIX, FNAME, LNAME, GENDER, ADDRESS, PHONE)
	VALUE
    ('0035697', 'Nguyen', 'Van Tung', 'M', 'Ho Chi Minh city', '0346851365'),
	('0036547', 'Tran', 'Quang Minh', 'M', 'Ca Mau', '03456987125'),
	('0038727', 'Nguyen', 'Duc Tai', 'M', 'Can Tho', '0035975463'),
	('0038887', 'Truong', 'Khanh Huyen', 'F', 'Binh Phuoc', '0354619753');
    
-- INSERT OUTPATIENT
INSERT INTO OUTPATIENT(POSTFIX, FNAME, LNAME, GENDER, ADDRESS, PHONE)
	VALUE
    ('0012345', 'Luong', 'Bang Quang', 'M', 'Ho Chi Minh city', '0904111222'),
	('0067890', 'Tran', 'Nguyen Hung', 'M', 'Ca Mau', '0322777999'),
	('0034567', 'Nguyen', 'Phan Thanh An', 'M', 'Can Tho', '0904123123'),
	('0023456', 'Truong', 'Thi Thuy Tien', 'F', 'Binh Phuoc', '0933888555');
    
-- INSERT ADMISSION
INSERT INTO ADMISSION(ADMISSION_DATE, ROOM, IPOSTFIX, NCODE)
    VALUE
         ('2022-04-10', '1001', '0035697', '000009'),
         ('2022-05-04', '1002', '0038727', '000010'),
         ('2022-07-21', '1003', '0038887', '000011'),
         ('2022-07-30', '1004', '0035697', '000012'),
         ('2022-08-01', '1004', '0036547', '000013');
         
-- INSERT TREATMENT
INSERT INTO TREATMENT(START_TIME, END_TIME, ADMISSION_DATE, IPOSTFIX, RESULT, FEE, DIAGNOSIS, DCODE)
    VALUE
         ('2022-04-10 10:08:30', '2022-04-10 12:00:00', '2022-04-10', '0035697', 'HEALING', 100000, 'ILLNESS', '000001'),
         ('2022-04-12 09:00:00', '2022-04-12 11:00:00', '2022-04-10', '0035697', 'SUPERVISED', 500000, 'ILLNESS', '000005'),
         ('2022-05-05 09:00:00', '2022-05-05 12:00:00', '2022-05-04', '0038727', 'HEALING', 1000000, 'BONE BROKEN', '000002'),
         ('2022-05-10 08:00:00', '2022-05-10 12:00:00', '2022-05-04', '0038727', 'DICHARGED', 1000000, 'BONE BROKEN', '000003'),
         ('2022-07-21 20:00:00', '2022-07-21 21:00:00', '2022-07-21', '0038887', 'HEALING', 200000, 'HEADACHE', '000003'),
         ('2022-07-30 18:00:00', '2022-07-30 19:30:00', '2022-07-30', '0035697', 'HEALING', 3000000, 'INNER INJURY', '000007'),
         ('2022-08-02 20:00:00', '2022-08-02 20:30:00', '2022-08-01', '0036547', 'HEALING', 1000000, 'TOOTHACHE', '000001');
         
-- INSERT EXAMINATION
INSERT INTO EXAMINATION(TIME, OPOSTFIX, FEE, NEXT_DATE, DIAGNOSIS, DCODE)
    VALUE
         ('2022-06-06 10:00:00', '0067890', 100000, '2022-07-06', 'STOMACHACHE', '000003'),
         ('2022-08-09 10:00:00', '0023456', 2000000, '2022-09-09', 'SKIN CARE', '000007');

INSERT INTO EXAMINATION(TIME, OPOSTFIX, FEE, DIAGNOSIS, DCODE)
	VALUE
		 ('2022-06-06 09:00:00', '0012345', 500000, 'GENERAL HEALTH CHECK', '000002'),
         ('2022-07-06 14:00:00', '0067890', 150000, 'STOMACHACHE', '000003'),
         ('2022-08-10 08:00:00', '0023456', 2000000, 'SKIN CARE', '000007'),
         ('2022-09-10 10:00:00', '0034567', 300000, 'HEADACHE', '000003');

-- INSERT CONFIRMS_RECOVERY
INSERT INTO CONFIRMS_RECOVERY(DATE_OF_DISCHARGE, ADMISSION_DATE, IPOSTFIX, DOCCODE)
    VALUE
         ('2022-04-12', '2022-04-10', '0035697', '000001'),
         ('2022-05-10', '2022-05-04', '0038727', '000002'),
         ('2022-07-23', '2022-07-21', '0038887', '000004'),
         ('2022-08-02', '2022-07-30', '0035697', '000005'),
         ('2022-08-02', '2022-08-01', '0036547', '000006');

-- INSERT USES
INSERT INTO USES(USE_QUANTITY, START_TIME, END_TIME, ADMISSION_DATE, IPOSTFIX, MCODE)
    VALUE
         (5, '2022-04-10 10:08:30', '2022-04-10 12:00:00', '2022-04-10', '0035697', 'A001'),
         (4, '2022-04-10 10:08:30', '2022-04-10 12:00:00', '2022-04-10', '0035697', 'B003'),
         (10, '2022-07-21 20:00:00', '2022-07-21 21:00:00', '2022-07-21', '0038887', 'A001'),
         (10, '2022-07-30 18:00:00', '2022-07-30 19:30:00', '2022-07-30', '0035697', 'C003');
         
-- INSERT CONSUMES
INSERT INTO CONSUMES(TIME, OPOSTFIX, MCODE, CONSUME_QUANTITY)
    VALUE
         ('2022-06-06 10:00:00', '0067890', 'C003', 20),
         ('2022-09-10 10:00:00', '0034567', 'A001', 10),
         ('2022-09-10 10:00:00', '0034567', 'B002', 5);
         
-- INSERT PROVIDES
INSERT INTO PROVIDES(PNUMBER, MCODE)
    VALUE
        ('001', 'A001'),
        ('002', 'B002'),
        ('003', 'B003'),
        ('004', 'C003');
        
-- INSERT DOCTOR_PHONE
INSERT INTO DOCTOR_PHONE(PHONE_NO, DOCCODE)
    VALUE
         ('0903111222', '000001'),
         ('0904332332', '000001'),
         ('0523141232', '000002'),
         ('0987223224', '000003'),
         ('0903442445', '000004'),
         ('0907443223', '000005'),
         ('0908423345', '000005'),
         ('0905332335', '000006'),
         ('0977565445', '000007'),
         ('0905444677', '000008');

-- INSERT NURSE_PHONE
INSERT INTO NURSE_PHONE(PHONE_NO, NCODE)
    VALUE
         ('0956334556', '000009'),
         ('0588002445', '000010'),
         ('0908456456', '000011'),
         ('0906556789', '000012'),
         ('0905221237', '000013'),
         ('0907553691', '000014'),
         ('0902334111', '000015'),
         ('0905221221', '000016'),
         ('0905445667', '000016');
         